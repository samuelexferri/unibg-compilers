Assembler del MIPS!
Usare le classi per definire le varie strutture!

CODE:
C_MIPS (Sintassi)
C_MIPS_debug (Sintassi ma deprecata)
C_MIPS_semantic (Semantica)

SINTASSI:
Prospezione LL(1) k=1

SEMANTICA:
Una variabile globale può essere dichiarata alla fine: controllo posticipato dopo, salvare una struttura per i controlli successivi da fare a fine parsing; tuttavia il C non permette ciò.
Symbol Table separata per ogni blocco locale (pensare in maniera ricorsiva) più quella globale.
Errori è una lista di stringhe da riordinare in ordine crescente in base alle linee.

TODO:
Mancante: 	cast, do-while, const, bool, a++, !a

Variabili:	Ridefinizione (senza type iniziale) globale in teoria da non permettere (anche vettori, puntatori)
Vettori: 	Lunghezza da salvare nella symbol table, Errore non dato nel caso manca il size o la definizione tra graffe, Non hanno l'indirizzo i loro valori (-1)
Puntatori: 	Indirizzo fittizio, Puntatori tra parentesi *(cb + 1)
Call Function: 	Controllo call_params, possiamo chiamarla con qualsiasi tipo per ora
Return: 	Almeno un return (controllo blando), Obbligatorio nel main return 0

If, For, While: Per ora non gestiamo le cose in esecuzione, eseguirà l'inizializzazione e l'incremento lo stesso una sola volta..., Parentesi nei compare non fatte

Program Counter vs Stack Pointer

TRADUZIONE:
Ipotesi tutte .word

Operazioni:	Funziona ma non usa i registri ma le costanti quando si usano parentesi (si crea una nuova expression)

MARS
TODO

Commentare lw iniziali e finali
Traduzione non funziona!