#include <stdio.h>
#include <stdlib.h>

int a;
float b;
char c;

//int a = 1; // Errore
int d = 1;
a = 5;

int vect1[] = {1,3,4}; // TODO Assegnamento dei vettori
//int vect[] = {1.1,3,4}; // Errore
int vect2[5]; // TODO Lunghezza da salvare nella symbol table

// TODO Puntatori

int e = 1, f = 2, g;

int test(int j, char k) {
    int vect[] = {1,3,4};
    int vect2[5];

    int a;
    a = 1;

    int vect3[] = {1,3,4};
    //int vect[] = {1.1,3,4}; // Errore
    int vect4[5]; // TODO Nella Symbol Table

    return 1; // TODO Il fatto che ci sia almeno uno (Controllo blando)
    return a;
    return;
}

char funct_char(int a, int b) { // TODO Controllo call_params

}

int main (int j, char k) {
    int h = 3;
    h = 5;
    a = 7;
    //z = 5; // Errore, globali definite prima (sequenziale)
    int ret = test() + 1; // TODO Valori fittizi del return

    test();

    char a = 'a' + 'a';
    // char a = 'a' - 'a'; // Errore

    char f = funct_char() + 'a';

    //a = test() + 1; // TODO Calcolare il valore di return, per ora solo controllo sui tipi ritornati

    //return 0; // TODO Obbligatorio return 0; nel main
}

void funct_void(int l, char m) {
}

int z = 3; // Errore, globali definite prima (sequenziale)

//test(); // Errore

/*
Valori fittizi dei return
Call args
Return controllato in modo blando e nel main
Contare i vettori

Vettori
Puntatori

If
For
While

Traduzione: operazioni

NO: +=
*/