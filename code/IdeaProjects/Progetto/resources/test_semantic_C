#include <stdio.h>
#include <stdlib.h>

int a;
float b;
char c;

//int a = 1; // Errore giusto
int d = 1;
a = 5;

int vect0[5]; // TODO Lunghezza da salvare nella symbol table
int vect1[] = {1,2,3,4};
//int vect2[] = {1.1,3,4}; // Errore giusto

// TODO Puntatori

int e = 1, f = 2, g;

int func_test(int j, char k) {
    int a;
    a = 1;

    int vect3[5];
    int vect4[] = {5,6};
    //int vect5[] = {1.1,3,4}; // Errore giusto
    int vect6[]; //

    a = vect1[3];

    //int vect7[] = {'a', 'b', 'c'}; // Errore giusto
    char vect8[] = {'a', 'b', 'c'};

    c = vect8[1];
    //a = vect8[1]; // Errore giusto

    return 1; // TODO Almeno un return (Controllo blando)
    return a;
    return;
}

char funct_char(int a, int b) { // TODO Controllo call_params, possiamo chiamarla come si vuole per ora
}

int main (int j, char k) {
    //z = 5; // Errore giusto, globali definite solamente prima (sequenziale)

    char a = 'a' + 'a';
    char f = funct_char() + 'a';
    //char a = 'a' - 'a'; // Errore giusto

    int ret = func_test() + 1; // TODO Valori fittizzi per i return dopo aver eseguito tutti i calcoli delle funzioni, per ora solo controllo sui tipi ritornati
    //int ret = func_char() + 1; // Errore giusto

    return 0; // TODO Obbligatorio nel main return 0
}

void funct_void(int l, char m) {
}

int z = 3; // Errore giusto, globali definite solamente prima (sequenziale)

//test(); // Errore giusto
