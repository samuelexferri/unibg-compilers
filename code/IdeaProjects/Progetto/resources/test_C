#include <stdio.h>
#include <stdlib.h>

// Commento

/*
    Commento
*/

int a;
float b = 2.2;
char c;
//int a = 1;
int d = 1, e, f = 2;
a;
a = 2;
float g = (5+b)*4-5*3;
g = (5+b)*4;
//a = 1, b = 3;

int vettore1[] = {2, 3};
//int vettore2[5] = {5, 6}; // TODO Errore semantico non gestito: richiede 5 elementi e ne si assegnano 2
char vettore3[];
//char vettore4[] = {c, 5.4 , 3*b, 4};
//vettore5[5] = {2};

int *p1;
int *p2 = &a;
*p1 = &a;
*p1 = 5;

//vettore5[] = {5,6};
//*vettore5 = 5;

char ca = 'a';
char *cb = &ca;
//*(cb + 1) = 3; // TODO Puntatori tra parentesi

char special1 = '\n';
char special2 = '\0';

//a++; // TODO Non fatto

int sqrt(int a) {
    return 1;
}

int radice = sqrt(a)+2;

void func_void();

int funzione();

int main (int j, char k) {
    int a;
    float b = 2.2;
    char c;
    //int a = 1;
    int d = 1, e, f = 2;
    a;
    a = 2;
    float g = (5+b)*4-5*3;
    g = (5+b)*4;
    //a = 1, b = 3;

    int vettore1[] = {2, 3};
    //int vettore2[5] = {5, 6}; // TODO Errore semantico non gestito: richiede 5 elementi e ne si assegnano 2
    char vettore3[];
    //char vettore4[] = {c, 5.4 , 3*b, 4};
    //vettore5[5] = {2};

    int *p1;
    int *p2 = &a;
    *p1 = &a;
    *p2 = 5;

    //vettore5[] = {5,6};
    //*vettore5 = 5;

    char ca = 'a';
    char *cb = &ca;
    //*(cb + 1) = 3; // TODO Puntatori tra parentesi

    char special1 = '\n';
    char special2 = '\0';

    //a++; // TODO Non fatto

    funzione(t);
    funzione();

    //void pippo();
    //int pippo();

    return p1;
    return *p1;
    return &p1;
    return funzione();
}

int statements(int t) {
		if (a == 5) {
			a;
		} else if (a == 5) {
			b;
			if (a == 5) {
			    a;
			}
		}  else {
		    c;
		}

        if (a == 5) {
                     a;
         } else if (a == 5) {
             b;
         } else while (a > 0) {
             c;
         }

		while(a > 0) {
        	a = a - 1;
        }

        for(int b = a + 1; b <= (a + 5); b += 1) {
           a;
        }

        printf("a", "b=2", a, "Text for + * #", *b);
}

int pippo; // Variabili globali come le funzioni devono essere all'inizio, ma non Ã¨ un'errore (sequenziale)
